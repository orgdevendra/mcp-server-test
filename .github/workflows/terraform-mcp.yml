# This GitHub Actions workflow demonstrates how to use the HashiCorp Terraform MCP Server (Docker) for a full IaC workflow.
# It runs on every push to main, and on pull requests for validation.
# Adjust the paths, secrets, and environment variables as needed for your project.

name: Terraform MCP Server CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_RESOURCE_GROUP_NAME: ${{ secrets.TF_RESOURCE_GROUP_NAME }} # <-- Add as repository or environment secret
      TF_LOCATION: ${{ secrets.TF_LOCATION }}                 # <-- Add as repository or environment secret
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Terraform Init
        run: |
          docker run --rm \
            -e ARM_CLIENT_ID \
            -e ARM_CLIENT_SECRET \
            -e ARM_SUBSCRIPTION_ID \
            -e ARM_TENANT_ID \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            hashicorp/terraform:latest init -input=false

      - name: Terraform Plan
        run: |
          docker run --rm \
            -e ARM_CLIENT_ID \
            -e ARM_CLIENT_SECRET \
            -e ARM_SUBSCRIPTION_ID \
            -e ARM_TENANT_ID \
            -e TF_RESOURCE_GROUP_NAME \
            -e TF_LOCATION \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            hashicorp/terraform:latest plan -input=false -out=tfplan -var "resource_group_name=$TF_RESOURCE_GROUP_NAME" -var "location=$TF_LOCATION"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          docker run --rm \
            -e ARM_CLIENT_ID \
            -e ARM_CLIENT_SECRET \
            -e ARM_SUBSCRIPTION_ID \
            -e ARM_TENANT_ID \
            -e TF_RESOURCE_GROUP_NAME \
            -e TF_LOCATION \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            hashicorp/terraform:latest apply -input=false -auto-approve tfplan -var "resource_group_name=$TF_RESOURCE_GROUP_NAME" -var "location=$TF_LOCATION"

      - name: Upload Terraform Plan as Artifact (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan
